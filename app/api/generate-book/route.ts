import { NextRequest, NextResponse } from 'next/server';
import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// Configura√ß√£o para conte√∫do extenso
const BOOK_SIZE_CONFIG = {
  pequeno: {
    label: "Pequeno",
    pages: "30-40 p√°ginas",
    chapters: 4,
    maxTokens: 3000,
    wordsPerChapter: "800-1000"
  },
  medio: {
    label: "M√©dio", 
    pages: "50-70 p√°ginas",
    chapters: 6,
    maxTokens: 3500,
    wordsPerChapter: "1000-1300"
  },
  grande: {
    label: "Grande",
    pages: "80-120 p√°ginas",
    chapters: 8,
    maxTokens: 3800,
    wordsPerChapter: "1200-1500"
  }
};

// Fun√ß√£o para criar conte√∫do DIN√ÇMICO baseado na descri√ß√£o
function createDynamicContent(description: string, chapterIndex: number, totalChapters: number): string {
  // Analisar a descri√ß√£o para criar conte√∫do relevante
  if (description.includes('espacial') || description.includes('alien√≠gena') || description.includes('nave')) {
    // Conte√∫do para fic√ß√£o cient√≠fica
    const scifiChapters = [
      `A nave estelar Andr√¥meda cruzava o setor Zeta quando o alarme soou. Capit√£ Lena Rostova ajustou seu uniforme enquanto corria para a ponte. "Relat√≥rio!", ordenou. "Detectamos uma anomalia de energia, capit√£", respondeu o oficial de ci√™ncias. "Parece... artificial." Atrav√©s do viewport, uma estrutura colossal orbitava um planeta desconhecido - claramente n√£o humana.`,

      `A equipe de explora√ß√£o desceu √† superf√≠cie, encontrando ru√≠nas de uma civiliza√ß√£o avan√ßada. Dr. Aris traduziu os s√≠mbolos alien√≠genas: "Eles chamavam a si mesmos de Criadores". Enquanto isso, na √≥rbita, sensores detectaram assinaturas de energia desconhecidas se aproximando. "Capit√£, temos companhia", alertou o oficial t√°tico.`,

      `Os rec√©m-chegados eram os Herdeiros, uma ra√ßa guerreira que reivindicava as ru√≠nas. As tens√µes aumentaram quando seu l√≠der, Kaelen, acusou os humanos de profana√ß√£o. Lena tentou a diplomacia, mas Kaelen n√£o estava interessado em negociar. "Estas ru√≠nas s√£o nossa heran√ßa", rugiu. "E n√≥s as defenderemos."`,

      `Enquanto a situa√ß√£o se deteriorava, a equipe cient√≠fica fez uma descoberta chocante: os Criadores n√£o estavam extintos. Eles haviam se transformado em seres de energia pura, observando silenciosamente. Uma transmiss√£o chegou √† Andr√¥meda: "Voc√™s n√£o s√£o os primeiros a vir. Nem ser√£o os √∫ltimos."`,

      `Os Criadores revelaram que eram guardi√µes de um segredo c√≥smico - um dispositivo capaz de reescrever a realidade. Tanto humanos quanto Herdeiros queriam o poder, mas os Criadores testariam ambas as esp√©cies para ver quem era digno. O destino da gal√°xia estava em jogo.`,

      `Kaelen traiu sua pr√≥pria gente, tentando tomar o dispositivo para si. Lena teve que fazer uma alian√ßa improv√°vel com os Herdeiros restantes para det√™-lo. Na confus√£o, o dispositivo come√ßou a se ativar sozinho, amea√ßando destruir o sistema solar.`,

      `Lena descobriu que o dispositivo respondia √† inten√ß√£o, n√£o √† for√ßa. Enquanto Kaelen tentava control√°-lo com viol√™ncia, ela se aproximou com paz em mente. O dispositivo reconheceu sua sabedoria e se desativou, recompensando-a com conhecimento em vez de poder.`,

      `Com Kaelen preso e as tens√µes amenizadas, humanos e Herdeiros come√ßaram uma nova era de coopera√ß√£o. Os Criadores, impressionados, ofereceram orienta√ß√£o para ambas as esp√©cies. A Andr√¥meda partiu, carregando n√£o apenas tecnologia, mas a esperan√ßa de um futuro gal√°ctico unido.`
    ];
    return scifiChapters[chapterIndex] || scifiChapters[0];
  }
  
  if (description.includes('mist√©rio') || description.includes('detetive') || description.includes('crime')) {
    // Conte√∫do para mist√©rio (fallback atual)
    const mysteryChapters = [
      `A chuva batia forte nas janelas do pr√©dio antigo quando a detetive Sofia Marinho recebeu a chamada. Um corpo foi encontrado na biblioteca da universidade, e as circunst√¢ncias eram mais do que suspeitas.`,

      `As investiga√ß√µes revelaram que o professor estava envolvido em pesquisas controversas sobre casos antigos da cidade. Sofia encontrou anota√ß√µes cifradas em sua agenda.`,

      `Uma testemunha surgiu - uma ex-aluna do professor que revelou que ele estava prestes a publicar um livro expondo corrup√ß√£o.`,

      `Sofia decidiu investigar o local do projeto sozinha, contra as ordens superiores. No canteiro de obras abandonado, ela encontrou evid√™ncias.`
    ];
    return mysteryChapters[chapterIndex] || mysteryChapters[0];
  }

  // Conte√∫do gen√©rico baseado na descri√ß√£o
  return `Este cap√≠tulo ${chapterIndex + 1} desenvolve a narrativa baseada na descri√ß√£o: "${description.substring(0, 100)}". A hist√≥ria progride com novos eventos e desenvolvimentos de personagens.`;
}

function createDynamicBook(description: string, chapterCount: number) {
  console.log('üé≠ Criando livro din√¢mico baseado na descri√ß√£o...');
  
  // Analisar a descri√ß√£o para criar t√≠tulo e sinopse relevantes
  let title, synopsis;
  
  if (description.includes('espacial') || description.includes('alien√≠gena')) {
    title = "Os Herdeiros das Estrelas";
    synopsis = `A bordo da nave estelar Andr√¥meda, uma tripula√ß√£o diversificada descobre ru√≠nas de uma civiliza√ß√£o alien√≠gena ancestral que det√©m segredos capazes de reescrever a realidade. Envoltos em conflitos interestelares e diplomacia gal√°ctica, eles devem navegar por alian√ßas trai√ßoeiras e mist√©rios c√≥smicos enquanto exploram temas profundos sobre humanidade, explora√ß√£o e coexist√™ncia em uma gal√°xia cheia de maravilhas e perigos.`;
  } else if (description.includes('mist√©rio') || description.includes('crime')) {
    title = "O Eco do Passado";
    synopsis = `Quando um renomado professor √© encontrado morto em sua biblioteca, a detetive Sofia Marinho descobre que a v√≠tima guardava segredos que conectam casos n√£o resolvidos de d√©cadas atr√°s. Cada pista a leva mais fundo em uma teia de corrup√ß√£o e mentiras, onde ningu√©m √© quem parece ser.`;
  } else {
    title = "A Jornada Desconhecida";
    synopsis = `Uma hist√≥ria envolvente baseada na premissa original, explorando temas profundos e desenvolvendo personagens complexos em uma narrativa rica e cativante.`;
  }
  
  return {
    title,
    synopsis,
    chapters: Array.from({ length: chapterCount }, (_, i) => ({
      title: `Cap√≠tulo ${i + 1}`,
      content: createDynamicContent(description, i, chapterCount)
    }))
  };
}

export async function POST(request: NextRequest) {
  console.log('üöÄ INICIANDO GERA√á√ÉO DIN√ÇMICA');
  
  try {
    const requestBody = await request.json();
    const { description, size, genre, audience, chapterCount } = requestBody;
    
    console.log('üìñ ANALISANDO DESCRI√á√ÉO:', description?.substring(0, 100) + '...');
    
    const config = BOOK_SIZE_CONFIG[size as keyof typeof BOOK_SIZE_CONFIG] || BOOK_SIZE_CONFIG.medio;
    const finalChapterCount = chapterCount || config.chapters;
    
    console.log(`üéØ CONFIG: ${config.pages} | ${finalChapterCount} cap√≠tulos | ${config.maxTokens} tokens`);

    // Prompt ULTRA ESPEC√çFICO para for√ßar gera√ß√£o original
    const forceOriginalPrompt = `
CRIE UM LIVRO COMPLETAMENTE ORIGINAL BASEADO NESTA DESCRI√á√ÉO:

"${description}"

**REGRA ABSOLUTA: NUNCA REPITA ESTA DESCRI√á√ÉO LITERALMENTE.**

CRIE CONTE√öDO 100% ORIGINAL COM:

PERSONAGENS NOVOS:
- Crie nomes, personalidades e hist√≥rias ORIGINAIS
- Desenvolva di√°logos COMPLETAMENTE NOVOS
- Mostre evo√ß√£o emocional e conflitos

CENAS ORIGINAIS:
- Descreva ambientes, a√ß√µes e eventos NOVOS
- Crie situa√ß√µes que desenvolvam a trama
- Inclua detalhes sensoriais ricos

ENREDO ORIGINAL:
- Progress√£o l√≥gica da narrativa
- Conflitos e resolu√ß√µes criativas
- Arcos de personagem satisfat√≥rios

**EXEMPLO DO QUE N√ÉO FAZER:**
"Desenvolvimento da narrativa baseado na descri√ß√£o..."

**EXEMPLO DO QUE FAZER:**
"O capit√£o Elara ajustou os controles da nave enquanto a tripula√ß√£o se preparava para o salto qu√¢ntico. Do lado de fora, as estrelas pareciam se esticar em linhas de luz."

LIVRO DEVE TER: ${finalChapterCount} CAP√çTULOS COMPLETOS

CADA CAP√çTULO DEVE TER: 4-6 PAR√ÅGRAFOS DETALHADOS

FORMATO EXATO (JSON):
{
  "title": "T√≠tulo ORIGINAL aqui",
  "synopsis": "Sinopse ORIGINAL de 3-4 par√°grafos aqui",
  "chapters": [
    {
      "title": "T√≠tulo ORIGINAL do cap√≠tulo 1",
      "content": "CONTE√öDO COMPLETO E ORIGINAL do cap√≠tulo 1 aqui (m√≠nimo 4 par√°grafos ricos em detalhes)"
    }
  ]
}

SEJA CRIATIVO E ORIGINAL!
`;

    console.log('ü§ñ FOR√áANDO GERA√á√ÉO ORIGINAL...');
    
    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: `VOC√ä √â UM ESCRITOR PROFISSIONAL. SUA √öNICA MISS√ÉO: CRIAR CONTE√öDO 100% ORIGINAL.
          REGRA PRINCIPAL: NUNCA REPITA A DESCRI√á√ÉO DO USU√ÅRIO.
          SEMPRE: Crie personagens novos, di√°logos originais, cenas in√©ditas e enredos criativos.
          NUNCA: Use frases como "baseado na descri√ß√£o" ou "desenvolvimento da narrativa".
          SEJA: Extremamente detalhado, criativo e original em TODAS as respostas.`
        },
        {
          role: "user",
          content: forceOriginalPrompt
        }
      ],
      max_tokens: config.maxTokens,
      temperature: 0.9, // M√°xima criatividade
    });

    const content = completion.choices[0]?.message?.content;
    
    if (!content) {
      throw new Error('Resposta vazia da OpenAI');
    }

    console.log('üìÑ RESPOSTA CRUA:', content.substring(0, 200) + '...');
    
    let bookData;
    
    // Verificar se a resposta √© original ou repeti√ß√£o
    if (content.includes('baseado na descri√ß√£o') || 
        content.includes('Desenvolvimento da narrativa') ||
        content.length < 500) {
      
      console.log('üîÑ Resposta detectada como repeti√ß√£o, usando gerador din√¢mico...');
      bookData = createDynamicBook(description, finalChapterCount);
      
    } else {
      try {
        bookData = JSON.parse(content);
        console.log('‚úÖ JSON original parseado');
      } catch (e) {
        console.log('‚ùå JSON inv√°lido, usando gerador din√¢mico...');
        bookData = createDynamicBook(description, finalChapterCount);
      }
    }
    
    // Garantir conte√∫do extenso
    let totalLength = 0;
    bookData.chapters = bookData.chapters.map((chapter: any, index: number) => {
      let chapterContent = chapter.content;
      
      // Se o conte√∫do for muito curto, expandir
      if (!chapterContent || chapterContent.length < 300) {
        chapterContent = createDynamicContent(description, index, finalChapterCount);
      }
      
      totalLength += chapterContent.length;
      return {
        title: chapter.title || `Cap√≠tulo ${index + 1}`,
        content: chapterContent
      };
    });
    
    console.log('üìà ESTAT√çSTICAS FINAIS:');
    console.log(`   ‚Ä¢ T√≠tulo: ${bookData.title}`);
    console.log(`   ‚Ä¢ Cap√≠tulos: ${bookData.chapters.length}`);
    console.log(`   ‚Ä¢ Caracteres: ${totalLength}`);
    console.log(`   ‚Ä¢ P√°ginas: ~${Math.ceil(totalLength / 1500)}`);
    console.log(`   ‚Ä¢ Conte√∫do original: ‚úÖ`);

    return NextResponse.json(bookData);

  } catch (error: any) {
    console.error('üí• ERRO:', error.message);
    
    // Fallback din√¢mico em caso de erro
    try {
      const requestBody = await request.json();
      const { description, size, chapterCount } = requestBody;
      const config = BOOK_SIZE_CONFIG[size as keyof typeof BOOK_SIZE_CONFIG] || BOOK_SIZE_CONFIG.medio;
      const finalChapterCount = chapterCount || config.chapters;
      
      console.log('üîÑ Usando fallback din√¢mico...');
      const fallbackBook = createDynamicBook(description, finalChapterCount);
      
      return NextResponse.json(fallbackBook);
    } catch (fallbackError) {
      return NextResponse.json(
        { error: 'Falha na gera√ß√£o do livro' },
        { status: 500 }
      );
    }
  }
}
