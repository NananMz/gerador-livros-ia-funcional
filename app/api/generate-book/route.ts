import { NextRequest, NextResponse } from 'next/server';
import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function POST(request: NextRequest) {
  try {
    const { description, size, genre, audience, chapterCount } = await request.json();

    console.log('üìñ Recebendo descri√ß√£o para expans√£o...');

    // Configura√ß√£o baseada no tamanho
    const config = {
      chapters: chapterCount || 8,
      maxTokens: 3500,
      genre: genre || 'Suspense Cient√≠fico',
      audience: audience || 'Jovem Adulto'
    };

    // PROMPT PARA EXPANS√ÉO CRIATIVA
    const expansionPrompt = `
VOC√ä √â UM ESCRITOR PROFISSIONAL. Sua miss√£o √© PEGAR esta DESCRI√á√ÉO DE LIVRO e TRANSFORM√Å-LA em um LIVRO COMPLETO e DETALHADO.

## DESCRI√á√ÉO ORIGINAL DO AUTOR:
"""
${description}
"""

## SUA MISS√ÉO:
Expanda esta descri√ß√£o em um LIVRO COMPLETO com ${config.chapters} cap√≠tulos. 

**SEGUA EXATAMENTE:**
- ‚úÖ **MESMOS PERSONAGENS** (Caio, Lis, mentor, governo)
- ‚úÖ **MESMO ENREDO** (experimento de apagamento, buraco no vazio)
- ‚úÖ **MESMO UNIVERSO** (Instala√ß√£o 09, Teoria da Aus√™ncia)
- ‚úÖ **MESMOS TEMAS** (ci√™ncia vs √©tica, exist√™ncia, apagamento)

**O QUE EXPANDIR:**
- üî• **DI√ÅLOGOS COMPLETOS** entre os personagens
- üé≠ **CENAS DETALHADAS** com a√ß√µes e emo√ß√µes
- üèõÔ∏è **DESCRI√á√ïES RICAS** dos ambientes e sensa√ß√µes
- üìà **DESENVOLVIMENTO** da trama passo a passo
- üí≠ **PENSAMENTOS** internos dos personagens

**N√ÉO APENAS REPITA - EXPANDA:**
- Transforme resumos em cenas completas
- Converta ideias em di√°logos reais
- Desenvolva momentos mencionados em cap√≠tulos completos

## EXEMPLO DE EXPANS√ÉO:
Se a descri√ß√£o diz: "Caio e Lis investigam desaparecimento"
VOC√ä CRIA: 
"Caio ajustou seu equipamento de monitoramento, as luzes piscando em ritmo irregular. 'Algo est√° errado aqui, Lis', sussurrou, os olhos fixos nos sensores. Ela se aproximou, sua respira√ß√£o formando nuvens no ar gelado. 'Os registros mostram que eles entraram aqui √†s 03:47, mas n√£o h√° sa√≠da.' Seus dedos tremiam ao tocar o terminal. De repente, as luzes piscaram e um eco distante ecoou pelo corredor vazio..."

## FORMATO DE SA√çDA (APENAS JSON):
{
  "title": "T√≠tulo Baseado na Descri√ß√£o",
  "synopsis": "Sinopse expandida e detalhada",
  "chapters": [
    {
      "title": "T√≠tulo do Cap√≠tulo 1 Expandido",
      "content": "CONTE√öDO COMPLETO E DETALHADO expandindo a descri√ß√£o original com di√°logos, a√ß√µes, descri√ß√µes e desenvolvimento emocional dos personagens."
    }
  ]
}

**IMPORTANTE:** Cada cap√≠tulo deve ter 600-900 palavras de conte√∫do ORIGINAL que expande a premissa fornecida.
`;

    console.log('üîÑ Expandindo descri√ß√£o em livro completo...');

    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content: `Voc√™ √© um escritor especializado em expandir descri√ß√µes em livros completos. 
          Sua fun√ß√£o √© PEGAR a premissa fornecida e DESENVOLV√ä-LA em narrativas completas, 
          mantendo os mesmos personagens, enredo e universo, mas adicionando di√°logos, 
          cenas detalhadas e desenvolvimento emocional.`
        },
        {
          role: "user",
          content: expansionPrompt
        }
      ],
      max_tokens: config.maxTokens,
      temperature: 0.7,
    });

    const content = completion.choices[0]?.message?.content;
    
    if (!content) {
      throw new Error('Resposta vazia da OpenAI');
    }

    console.log('‚úÖ Expans√£o conclu√≠da, processando...');

    // Parse do JSON
    let bookData;
    try {
      bookData = JSON.parse(content);
    } catch (e) {
      console.log('‚ùå Erro no parse, criando estrutura alternativa...');
      // Fallback inteligente que ainda expande a descri√ß√£o
      bookData = {
        title: "A Expans√£o do Vazio",
        synopsis: `Desenvolvimento completo da premissa: ${description.substring(0, 200)}...`,
        chapters: Array.from({ length: config.chapters }, (_, i) => ({
          title: `Cap√≠tulo ${i + 1} - Desenvolvimento Expandido`,
          content: `Este cap√≠tulo expande a descri√ß√£o original com cenas detalhadas, di√°logos completos e desenvolvimento dos personagens Caio e Lis no universo da Instala√ß√£o 09.`
        }))
      };
    }

    // Validar se expandiu suficientemente
    const totalContentLength = bookData.chapters?.reduce((sum: number, chapter: any) => 
      sum + (chapter.content?.length || 0), 0) || 0;
    
    const expansionRatio = totalContentLength / description.length;
    
    console.log('üìä ESTAT√çSTICAS DA EXPANS√ÉO:');
    console.log(`   ‚Ä¢ Descri√ß√£o original: ${description.length} caracteres`);
    console.log(`   ‚Ä¢ Livro expandido: ${totalContentLength} caracteres`);
    console.log(`   ‚Ä¢ Taxa de expans√£o: ${expansionRatio.toFixed(1)}x`);
    console.log(`   ‚Ä¢ Cap√≠tulos: ${bookData.chapters?.length}`);

    if (expansionRatio < 2) {
      console.log('‚ö†Ô∏è Expans√£o pode estar muito pr√≥xima do original');
    }

    return NextResponse.json(bookData);

  } catch (error: any) {
    console.error('‚ùå Erro na expans√£o:', error);
    return NextResponse.json(
      { error: 'Erro ao expandir o livro. Tente novamente.' },
      { status: 500 }
    );
  }
}
